[{"/Users/qdy/Desktop/Coding/React/todo_list/src/index.js":"1","/Users/qdy/Desktop/Coding/React/todo_list/src/App.js":"2","/Users/qdy/Desktop/Coding/React/todo_list/src/components/todo.js":"3","/Users/qdy/Desktop/Coding/React/todo_list/src/components/Form.js":"4","/Users/qdy/Desktop/Coding/React/todo_list/src/components/FilterButton.js":"5"},{"size":441,"mtime":1653235638087,"results":"6","hashOfConfig":"7"},{"size":2339,"mtime":1653318779725,"results":"8","hashOfConfig":"7"},{"size":2652,"mtime":1653318425077,"results":"9","hashOfConfig":"7"},{"size":1038,"mtime":1653234621376,"results":"10","hashOfConfig":"7"},{"size":498,"mtime":1653286756433,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1072otg",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"/Users/qdy/Desktop/Coding/React/todo_list/src/index.js",[],[],[],"/Users/qdy/Desktop/Coding/React/todo_list/src/App.js",["29","30"],[],"import React from 'react';\nimport { nanoid } from 'nanoid';\nimport './index.css';\nimport Todo from './components/todo';\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = React.useState(props.tasks);\n  const [filter, setFilter] = React.useState('All');\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\"+nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function deleteTask(id){\n    const remainingTasks = tasks.filter(task=>id!==task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id,newName){\n    const editedTaskList = tasks.map(task=>{\n      //if the task has the same id as the edited task\n      if (id===task.id){\n        return {...task,name:newName}\n      }\n      return task;\n    })\n    setTasks(editedTaskList);\n  }\n\n  function toggleTaskCompleted(id) { \n    const updatedTasks = tasks.map(task =>{\n      if (id === task.id) {\n        return {...task, completed:!task.compleated}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task=>(\n    <Todo \n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id} \n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const filterButtons = FILTER_NAMES.map(filterName => (\n    <FilterButton\n      key={filterName}\n      name={filterName}\n      setFilter={setFilter}\n      isPressed={filterName === filter}\n    />\n  ));\n\n  const tasksNoun = taskList.length==1?\"task\":\"tasks\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div>\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask}/>\n      <div className='filters btn-group stack-exception'>\n        {filterButtons}\n      </div>\n      <h2 className='list-heading'>{headingText} tasks remaining</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/qdy/Desktop/Coding/React/todo_list/src/components/todo.js",[],[],"/Users/qdy/Desktop/Coding/React/todo_list/src/components/Form.js",[],[],"/Users/qdy/Desktop/Coding/React/todo_list/src/components/FilterButton.js",[],[],{"ruleId":"31","severity":1,"message":"32","line":73,"column":36,"nodeType":"33","messageId":"34","endLine":73,"endColumn":38},{"ruleId":"35","severity":1,"message":"36","line":84,"column":7,"nodeType":"37","endLine":88,"endColumn":8},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement"]